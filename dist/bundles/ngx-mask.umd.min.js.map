{"version":3,"sources":["ng://ngx-mask/app/ngx-mask/config.ts","node_modules/tslib/tslib.es6.js","ng://ngx-mask/app/ngx-mask/mask-applier.service.ts","ng://ngx-mask/app/ngx-mask/mask.service.ts","ng://ngx-mask/app/ngx-mask/mask.directive.ts","ng://ngx-mask/app/ngx-mask/mask.pipe.ts","ng://ngx-mask/app/ngx-mask/ngx-mask.module.ts"],"names":["config","InjectionToken","NEW_CONFIG","INITIAL_CONFIG","initialConfig","sufix","prefix","clearIfNotMatch","showTemplate","showMaskTyped","dropSpecialCharacters","specialCharacters","patterns","0","pattern","RegExp","9","optional","A","S","d","m","H","h","s","extendStatics","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","i","n","arguments","length","prototype","call","apply","this","__generator","thisArg","body","f","y","g","_","label","sent","trys","ops","next","verb","throw","return","Symbol","iterator","v","step","op","TypeError","done","value","pop","push","e","__read","o","r","ar","error","MaskApplierService","_config","maskExpression","separator","str","x","split","decimals","res","rgx","test","replace","dotSeparator","comaSeparator","substring","persantage","Number","_shift","Set","maskSpecialCharacters","maskAvailablePatterns","applyMaskWithPattern","inputValue","maskAndPattern","_a","mask","customPattern","applyMask","position","cb","undefined","cursor","result","multi","slice","inputArray","toString","match","strForSep","shiftStep","add","inputSymbol","_checkSymbolMask","indexOf","_findSpecialChar","shift","newPosition","has","find","val","maskSymbol","Injectable","Inject","args","MaskService","document","_elementRef","_renderer","_this","_super","isNumberValue","maskIsShown","onChange","onTouch","_formElement","nativeElement","__extends","__","constructor","create","tslib_1.__extends","isArray","_removeMask","_removeSufix","_removePrefix","resLen","applyValueChanges","maskedInput","activeElement","clearIfNotMatchFn","showMaskInInput","formElementProperty","defineProperty","_b","name","setProperty","specialCharactersForRemove","_regExpForRemove","map","item","join","DOCUMENT","ElementRef","Renderer2","MaskDirective","_maskService","_position","_maskValue","_repeatPatternSymbols","_inputValue","onInput","el","caretShift","selectionStart","selectionEnd","inputType","onBlur","onFocus","keyCode","a","preventDefault","onPaste","MAX_SAFE_INTEGER","writeValue","__awaiter","_arguments","P","generator","Promise","resolve","reject","fulfilled","rejected","then","String","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","maskExp","reduce","accum","currval","index","_start","_end","repeatNumber","Directive","selector","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","Input","HostListener","MaskPipe","transform","Pipe","pure","NgxMaskModule","forRoot","configValue","ngModule","useValue","useFactory","_configFactory","deps","forChild","NgModule","exports","declarations","initConfig"],"mappings":"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","sourcesContent":["import { InjectionToken } from \"@angular/core\";\r\n\r\nexport interface IConfig {\r\n  sufix: string;\r\n  prefix: string;\r\n  clearIfNotMatch: boolean;\r\n  showTemplate: boolean;\r\n  showMaskTyped: boolean;\r\n  dropSpecialCharacters: boolean | string[];\r\n  specialCharacters: string[];\r\n  patterns: {\r\n    [character: string]: {\r\n      pattern: RegExp;\r\n      optional?: boolean;\r\n    };\r\n  };\r\n}\r\n\r\nexport type optionsConfig = Partial<IConfig>;\r\nexport const config: InjectionToken<string> = new InjectionToken(\"config\");\r\nexport const NEW_CONFIG: InjectionToken<string> = new InjectionToken(\r\n  \"NEW_CONFIG\"\r\n);\r\nexport const INITIAL_CONFIG: InjectionToken<IConfig> = new InjectionToken(\r\n  \"INITIAL_CONFIG\"\r\n);\r\n\r\nexport const initialConfig: IConfig = {\r\n  sufix: \"\",\r\n  prefix: \"\",\r\n  clearIfNotMatch: false,\r\n  showTemplate: false,\r\n  showMaskTyped: false,\r\n  dropSpecialCharacters: true,\r\n  specialCharacters: [\r\n    \"-\",\r\n    \"/\",\r\n    \"(\",\r\n    \")\",\r\n    \":\",\r\n    \" \",\r\n    \"+\",\r\n    \",\",\r\n    \"@\",\r\n    \"[\",\r\n    \"]\",\r\n    '\"',\r\n    \"'\"\r\n  ],\r\n  patterns: {\r\n    \"0\": {\r\n      pattern: new RegExp(\"\\\\d\")\r\n    },\r\n    \"9\": {\r\n      pattern: new RegExp(\"\\\\d\"),\r\n      optional: true\r\n    },\r\n    A: {\r\n      pattern: new RegExp(\"[a-zA-Z0-9]\")\r\n    },\r\n    S: {\r\n      pattern: new RegExp(\"[a-zA-Z]\")\r\n    },\r\n    d: {\r\n      pattern: new RegExp(\"\\\\d\")\r\n    },\r\n    m: {\r\n      pattern: new RegExp(\"\\\\d\")\r\n    },\r\n    H: {\r\n      pattern: new RegExp(\"\\\\d\")\r\n    },\r\n    h: {\r\n      pattern: new RegExp(\"\\\\d\")\r\n    },\r\n    s: {\r\n      pattern: new RegExp(\"\\\\d\")\r\n    }\r\n  }\r\n};\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Inject, Injectable } from \"@angular/core\";\r\nimport { config, IConfig } from \"./config\";\r\n\r\n@Injectable()\r\nexport class MaskApplierService {\r\n  public dropSpecialCharacters: IConfig[\"dropSpecialCharacters\"];\r\n  public showTemplate: IConfig[\"showTemplate\"];\r\n  public clearIfNotMatch: IConfig[\"clearIfNotMatch\"];\r\n  public maskExpression: string = \"\";\r\n  public maskSpecialCharacters: IConfig[\"specialCharacters\"];\r\n  public maskAvailablePatterns: IConfig[\"patterns\"];\r\n  public prefix: IConfig[\"prefix\"];\r\n  public sufix: IConfig[\"sufix\"];\r\n  public customPattern: IConfig[\"patterns\"];\r\n\r\n  private _shift: Set<number>;\r\n\r\n  public constructor(@Inject(config) protected _config: IConfig) {\r\n    this._shift = new Set();\r\n    this.maskSpecialCharacters = this._config!.specialCharacters;\r\n    this.maskAvailablePatterns = this._config.patterns;\r\n    this.clearIfNotMatch = this._config.clearIfNotMatch;\r\n    this.dropSpecialCharacters = this._config.dropSpecialCharacters;\r\n    this.maskSpecialCharacters = this._config!.specialCharacters;\r\n    this.maskAvailablePatterns = this._config.patterns;\r\n    this.prefix = this._config.prefix;\r\n    this.sufix = this._config.sufix;\r\n  }\r\n  // tslint:disable-next-line:no-any\r\n  public applyMaskWithPattern(\r\n    inputValue: string,\r\n    maskAndPattern: [string, IConfig[\"patterns\"]]\r\n  ): string {\r\n    const [mask, customPattern] = maskAndPattern;\r\n    this.customPattern = customPattern;\r\n    return this.applyMask(inputValue, mask);\r\n  }\r\n  public applyMask(\r\n    inputValue: string,\r\n    maskExpression: string,\r\n    position: number = 0,\r\n    cb: Function = () => {}\r\n  ): string {\r\n    if (\r\n      inputValue === undefined ||\r\n      inputValue === null ||\r\n      maskExpression === undefined\r\n    ) {\r\n      return \"\";\r\n    }\r\n    let cursor: number = 0;\r\n    let result: string = ``;\r\n    let multi: boolean = false;\r\n\r\n    if (inputValue.slice(0, this.prefix.length) === this.prefix) {\r\n      inputValue = inputValue.slice(this.prefix.length, inputValue.length);\r\n    }\r\n\r\n    const inputArray: string[] = inputValue.toString().split(\"\");\r\n    if (maskExpression === \"percent\") {\r\n      if (\r\n        inputValue.match(\"[a-z]|[A-Z]\") ||\r\n        inputValue.match(/[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,\\/]/)\r\n      ) {\r\n        inputValue = inputValue.substring(0, inputValue.length - 1);\r\n      }\r\n      if (this.persantage(inputValue)) {\r\n        result = inputValue;\r\n      } else {\r\n        result = inputValue.substring(0, inputValue.length - 1);\r\n      }\r\n    } else if (maskExpression === \"separator\") {\r\n      if (\r\n        inputValue.match(\"[a-z]|[A-Z]\") ||\r\n        inputValue.match(/[!$%^&*()_+|~=`{}\\[\\]:\";'<>?\\/]/)\r\n      ) {\r\n        inputValue = inputValue.substring(0, inputValue.length - 1);\r\n      }\r\n      const strForSep: string = inputValue.replace(/\\s/g, \"\");\r\n      result = this.separator(strForSep);\r\n      position = result.length + 1;\r\n      cursor = position;\r\n      const shiftStep: number = /\\*|\\?/g.test(maskExpression.slice(0, cursor))\r\n        ? inputArray.length\r\n        : cursor;\r\n      this._shift.add(shiftStep + this.prefix.length || 0);\r\n    } else if (maskExpression === \"dot_separator\") {\r\n      if (\r\n        inputValue.match(\"[a-z]|[A-Z]\") ||\r\n        inputValue.match(/[!$%^&*()_+|~=`{}\\[\\]:\";'<>?\\/]/)\r\n      ) {\r\n        inputValue = inputValue.substring(0, inputValue.length - 1);\r\n      }\r\n      const strForSep: string = inputValue.replace(/\\./g, \"\");\r\n      result = this.dotSeparator(strForSep);\r\n      position = result.length + 1;\r\n      cursor = position;\r\n      const shiftStep: number = /\\*|\\?/g.test(maskExpression.slice(0, cursor))\r\n        ? inputArray.length\r\n        : cursor;\r\n      this._shift.add(shiftStep + this.prefix.length || 0);\r\n    } else if (maskExpression === \"coma_separator\") {\r\n      if (\r\n        inputValue.match(\"[a-z]|[A-Z]\") ||\r\n        inputValue.match(/[!$%^&*()_+|~=`{}\\[\\]:\";'<>?\\/]/)\r\n      ) {\r\n        inputValue = inputValue.substring(0, inputValue.length - 1);\r\n      }\r\n      const strForSep: string = inputValue.replace(/\\,/g, \"\");\r\n      result = this.comaSeparator(strForSep);\r\n      position = result.length + 1;\r\n      cursor = position;\r\n      const shiftStep: number = /\\*|\\?/g.test(maskExpression.slice(0, cursor))\r\n        ? inputArray.length\r\n        : cursor;\r\n      this._shift.add(shiftStep + this.prefix.length || 0);\r\n    } else {\r\n      // tslint:disable-next-line\r\n      for (\r\n        let i: number = 0, inputSymbol: string = inputArray[0];\r\n        i < inputArray.length;\r\n        i++, inputSymbol = inputArray[i]\r\n      ) {\r\n        if (cursor === maskExpression.length) {\r\n          break;\r\n        }\r\n        if (\r\n          this._checkSymbolMask(inputSymbol, maskExpression[cursor]) &&\r\n          maskExpression[cursor + 1] === \"?\"\r\n        ) {\r\n          result += inputSymbol;\r\n          cursor += 2;\r\n        } else if (\r\n          maskExpression[cursor + 1] === \"*\" &&\r\n          multi &&\r\n          this._checkSymbolMask(inputSymbol, maskExpression[cursor + 2])\r\n        ) {\r\n          result += inputSymbol;\r\n          cursor += 3;\r\n          multi = false;\r\n        } else if (\r\n          this._checkSymbolMask(inputSymbol, maskExpression[cursor]) &&\r\n          maskExpression[cursor + 1] === \"*\"\r\n        ) {\r\n          result += inputSymbol;\r\n          multi = true;\r\n        } else if (\r\n          maskExpression[cursor + 1] === \"?\" &&\r\n          this._checkSymbolMask(inputSymbol, maskExpression[cursor + 2])\r\n        ) {\r\n          result += inputSymbol;\r\n          cursor += 3;\r\n        } else if (this._checkSymbolMask(inputSymbol, maskExpression[cursor])) {\r\n          if (maskExpression[cursor] === \"H\") {\r\n            if (Number(inputSymbol) > 2) {\r\n              result += 0;\r\n              cursor += 1;\r\n              const shiftStep: number = /\\*|\\?/g.test(\r\n                maskExpression.slice(0, cursor)\r\n              )\r\n                ? inputArray.length\r\n                : cursor;\r\n              this._shift.add(shiftStep + this.prefix.length || 0);\r\n              i--;\r\n              continue;\r\n            }\r\n          }\r\n          if (maskExpression[cursor] === \"h\") {\r\n            if (result === \"2\" && Number(inputSymbol) > 3) {\r\n              continue;\r\n            }\r\n          }\r\n          if (maskExpression[cursor] === \"m\") {\r\n            if (Number(inputSymbol) > 5) {\r\n              result += 0;\r\n              cursor += 1;\r\n              const shiftStep: number = /\\*|\\?/g.test(\r\n                maskExpression.slice(0, cursor)\r\n              )\r\n                ? inputArray.length\r\n                : cursor;\r\n              this._shift.add(shiftStep + this.prefix.length || 0);\r\n              i--;\r\n              continue;\r\n            }\r\n          }\r\n          if (maskExpression[cursor] === \"s\") {\r\n            if (Number(inputSymbol) > 5) {\r\n              result += 0;\r\n              cursor += 1;\r\n              const shiftStep: number = /\\*|\\?/g.test(\r\n                maskExpression.slice(0, cursor)\r\n              )\r\n                ? inputArray.length\r\n                : cursor;\r\n              this._shift.add(shiftStep + this.prefix.length || 0);\r\n              i--;\r\n              continue;\r\n            }\r\n          }\r\n          result += inputSymbol;\r\n          cursor++;\r\n        } else if (this._checkSymbolMask(inputSymbol, maskExpression[cursor])) {\r\n          if (maskExpression[cursor] === \"d\") {\r\n            if (Number(inputSymbol) > 3) {\r\n              result += 0;\r\n              cursor += 1;\r\n              const shiftStep: number = /\\*|\\?/g.test(\r\n                maskExpression.slice(0, cursor)\r\n              )\r\n                ? inputArray.length\r\n                : cursor;\r\n              this._shift.add(shiftStep + this.prefix.length || 0);\r\n              i--;\r\n              continue;\r\n            }\r\n          }\r\n          if (maskExpression[cursor - 1] === \"d\") {\r\n            if (Number(inputValue.slice(cursor - 1, cursor + 1)) > 31) {\r\n              continue;\r\n            }\r\n          }\r\n          if (maskExpression[cursor] === \"m\") {\r\n            if (Number(inputSymbol) > 1) {\r\n              result += 0;\r\n              cursor += 1;\r\n              const shiftStep: number = /\\*|\\?/g.test(\r\n                maskExpression.slice(0, cursor)\r\n              )\r\n                ? inputArray.length\r\n                : cursor;\r\n              this._shift.add(shiftStep + this.prefix.length || 0);\r\n              i--;\r\n              continue;\r\n            }\r\n          }\r\n          if (maskExpression[cursor - 1] === \"m\") {\r\n            if (Number(inputValue.slice(cursor - 1, cursor + 1)) > 12) {\r\n              continue;\r\n            }\r\n          }\r\n          result += inputSymbol;\r\n          cursor++;\r\n        } else if (\r\n          this.maskSpecialCharacters.indexOf(maskExpression[cursor]) !== -1\r\n        ) {\r\n          result += maskExpression[cursor];\r\n          cursor++;\r\n          const shiftStep: number = /\\*|\\?/g.test(\r\n            maskExpression.slice(0, cursor)\r\n          )\r\n            ? inputArray.length\r\n            : cursor;\r\n          this._shift.add(shiftStep + this.prefix.length || 0);\r\n          i--;\r\n        } else if (\r\n          this.maskSpecialCharacters.indexOf(inputSymbol) > -1 &&\r\n          this.maskAvailablePatterns[maskExpression[cursor]] &&\r\n          this.maskAvailablePatterns[maskExpression[cursor]].optional\r\n        ) {\r\n          cursor++;\r\n          i--;\r\n        } else if (\r\n          this.maskExpression[cursor + 1] === \"*\" &&\r\n          this._findSpecialChar(this.maskExpression[cursor + 2]) &&\r\n          this._findSpecialChar(inputSymbol) ===\r\n            this.maskExpression[cursor + 2] &&\r\n          multi\r\n        ) {\r\n          cursor += 3;\r\n          result += inputSymbol;\r\n        }\r\n      }\r\n    }\r\n    if (\r\n      result.length + 1 === maskExpression.length &&\r\n      this.maskSpecialCharacters.indexOf(\r\n        maskExpression[maskExpression.length - 1]\r\n      ) !== -1\r\n    ) {\r\n      result += maskExpression[maskExpression.length - 1];\r\n    }\r\n\r\n    let shift: number = 1;\r\n    let newPosition: number = position + 1;\r\n\r\n    while (this._shift.has(newPosition)) {\r\n      shift++;\r\n      newPosition++;\r\n    }\r\n\r\n    cb(this._shift.has(position) ? shift : 0);\r\n    let res: string = `${this.prefix}${result}`;\r\n    res = this.sufix\r\n      ? `${this.prefix}${result}${this.sufix}`\r\n      : `${this.prefix}${result}`;\r\n    if (result.length === 0) {\r\n      res = `${this.prefix}${result}`;\r\n    }\r\n    return res;\r\n  }\r\n  public _findSpecialChar(inputSymbol: string): undefined | string {\r\n    const symbol: string | undefined = this.maskSpecialCharacters.find(\r\n      (val: string) => val === inputSymbol\r\n    );\r\n    return symbol;\r\n  }\r\n\r\n  private _checkSymbolMask(inputSymbol: string, maskSymbol: string): boolean {\r\n    this.maskAvailablePatterns = this.customPattern\r\n      ? this.customPattern\r\n      : this.maskAvailablePatterns;\r\n    return (\r\n      this.maskAvailablePatterns[maskSymbol] &&\r\n      this.maskAvailablePatterns[maskSymbol].pattern &&\r\n      this.maskAvailablePatterns[maskSymbol].pattern.test(inputSymbol)\r\n    );\r\n  }\r\n\r\n  private separator = (str: string) => {\r\n    str += \"\";\r\n    const x: string[] = str.split(\".\");\r\n    const decimals: string = x.length > 1 ? `.${x[1]}` : \"\";\r\n    let res: string = x[0];\r\n    const rgx: RegExp = /(\\d+)(\\d{3})/;\r\n    while (rgx.test(res)) {\r\n      res = res.replace(rgx, \"$1\" + \" \" + \"$2\");\r\n    }\r\n    return res + decimals;\r\n  };\r\n\r\n  private dotSeparator = (str: string) => {\r\n    str += \"\";\r\n    const x: string[] = str.split(\",\");\r\n    const decimals: string = x.length > 1 ? `,${x[1]}` : \"\";\r\n    let res: string = x[0];\r\n    const rgx: RegExp = /(\\d+)(\\d{3})/;\r\n    while (rgx.test(res)) {\r\n      res = res.replace(rgx, \"$1\" + \".\" + \"$2\");\r\n    }\r\n    return res + decimals;\r\n  };\r\n\r\n  private comaSeparator = (str: string) => {\r\n    str += \"\";\r\n    const x: string[] = str.split(\".\");\r\n    const decimals: string =\r\n      x.length > 1 ? `.${+x[1] < 3 ? x[1] : x[1].substring(0, 2)}` : \"\";\r\n    let res: string = x[0];\r\n    const rgx: RegExp = /(\\d+)(\\d{3})/;\r\n    while (rgx.test(res)) {\r\n      res = res.replace(rgx, \"$1\" + \",\" + \"$2\");\r\n    }\r\n    return res + decimals;\r\n  };\r\n\r\n  private persantage = (str: string): boolean => {\r\n    if (Number(str) >= 0 && Number(str) <= 100) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n}\r\n","import { ElementRef, Inject, Injectable, Renderer2 } from '@angular/core';\r\nimport { config, IConfig } from './config';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { MaskApplierService } from './mask-applier.service';\r\n\r\n@Injectable()\r\nexport class MaskService extends MaskApplierService {\r\n  public maskExpression: string = '';\r\n  public isNumberValue: boolean = false;\r\n  public showMaskTyped: boolean = false;\r\n  public maskIsShown: string = '';\r\n  private _formElement: HTMLInputElement;\r\n  // tslint:disable-next-line\r\n  public onChange = (_: any) => {};\r\n  public onTouch = () => {};\r\n  public constructor(\r\n    // tslint:disable-next-line\r\n    @Inject(DOCUMENT) private document: any,\r\n    @Inject(config) protected _config: IConfig,\r\n    private _elementRef: ElementRef,\r\n    private _renderer: Renderer2\r\n  ) {\r\n    super(_config);\r\n    this._formElement = this._elementRef.nativeElement;\r\n  }\r\n\r\n  public applyMask(\r\n    inputValue: string,\r\n    maskExpression: string,\r\n    position: number = 0,\r\n    cb: Function = () => {}\r\n  ): string  {\r\n\r\n    this.maskIsShown = this.showMaskTyped\r\n        ? this.maskExpression.replace(/\\w/g, '_')\r\n        : '';\r\n    if (!inputValue && this.showMaskTyped) {\r\n      return this.prefix + this.maskIsShown;\r\n    }\r\n    const result: string  = super.applyMask(\r\n      inputValue,\r\n      maskExpression,\r\n      position,\r\n      cb\r\n    );\r\n    Array.isArray(this.dropSpecialCharacters)\r\n        ? this.onChange(this._removeMask(this._removeSufix(this._removePrefix(result)), this.dropSpecialCharacters))\r\n        : this.dropSpecialCharacters === true\r\n         ? this.onChange(\r\n          this.isNumberValue\r\n             ? Number(this._removeMask(this._removeSufix(this._removePrefix(result)), this.maskSpecialCharacters))\r\n             : this._removeMask(this._removeSufix(this._removePrefix(result)), this.maskSpecialCharacters)\r\n            )\r\n         : this.onChange(this._removeSufix(this._removePrefix(result)));\r\n          let ifMaskIsShown: string = '';\r\n          if (!this.showMaskTyped) {\r\n            return result;\r\n          }\r\n          const resLen: number = result.length;\r\n          const prefNmask: string = this.prefix + this.maskIsShown;\r\n          ifMaskIsShown = prefNmask.slice(resLen);\r\n    return result + ifMaskIsShown;\r\n  }\r\n\r\n  public applyValueChanges(\r\n    position: number = 0,\r\n    cb: Function = () => {}\r\n  ): void {\r\n    const maskedInput: string | number = this.applyMask(\r\n      this._formElement.value,\r\n      this.maskExpression,\r\n      position,\r\n      cb\r\n    );\r\n    this._formElement.value = maskedInput;\r\n    if (this._formElement === this.document.activeElement) {\r\n      return;\r\n    }\r\n    this.clearIfNotMatchFn();\r\n  }\r\n\r\n  public showMaskInInput(): void {\r\n    if (this.showMaskTyped) {\r\n      this.maskIsShown = this.maskExpression.replace(/\\w/g, '_');\r\n    }\r\n  }\r\n\r\n  public clearIfNotMatchFn(): void {\r\n    if (\r\n      this.clearIfNotMatch === true &&\r\n      this.maskExpression.length !== this._formElement.value.length\r\n    ) {\r\n      this.formElementProperty = ['value', ''];\r\n      this.applyMask(this._formElement.value, this.maskExpression);\r\n    }\r\n  }\r\n\r\n  public set formElementProperty([name, value]: [string, string | boolean]) {\r\n    this._renderer.setProperty(this._formElement, name, value);\r\n  }\r\n\r\n  private _removeMask(\r\n    value: string,\r\n    specialCharactersForRemove: string[]\r\n  ): string {\r\n    return value\r\n      ? value.replace(this._regExpForRemove(specialCharactersForRemove), '')\r\n      : value;\r\n  }\r\n\r\n  private _removePrefix(value: string): string {\r\n    if (!this.prefix) {\r\n      return value;\r\n    }\r\n    return value\r\n      ? value.replace(this.prefix, '')\r\n      : value;\r\n  }\r\n\r\n  private _removeSufix(value: string): string {\r\n    if (!this.sufix) {\r\n      return value;\r\n    }\r\n    return value\r\n      ? value.replace(this.sufix, '')\r\n      : value;\r\n  }\r\n\r\n  private _regExpForRemove(specialCharactersForRemove: string[]): RegExp {\r\n    return new RegExp(\r\n      specialCharactersForRemove.map((item: string) => `\\\\${item}`).join('|'),\r\n      'gi'\r\n    );\r\n  }\r\n}","import {\r\n  Directive,\r\n  forwardRef,\r\n  HostListener,\r\n  Inject,\r\n  Input\r\n} from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { MaskService } from './mask.service';\r\nimport { IConfig } from './config';\r\n\r\n@Directive({\r\n  selector: '[mask]',\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => MaskDirective),\r\n      multi: true\r\n    },\r\n    MaskService\r\n  ]\r\n})\r\nexport class MaskDirective implements ControlValueAccessor {\r\n  private _maskValue: string;\r\n  private _inputValue: string;\r\n  private _position: number | null = null;\r\n  // tslint:disable-next-line\r\n  private _start: number;\r\n  private _end: number;\r\n  // tslint:disable-next-line\r\n  public onChange = (_: any) => { };\r\n  public onTouch = () => { };\r\n  public constructor(\r\n    // tslint:disable-next-line\r\n    @Inject(DOCUMENT) private document: any,\r\n    private _maskService: MaskService\r\n  ) { }\r\n\r\n\r\n  @Input('mask')\r\n  public set maskExpression(value: string) {\r\n    this._maskValue = value || '';\r\n    if (!this._maskValue) {\r\n      return;\r\n    }\r\n    this._maskService.maskExpression = this._repeatPatternSymbols(this._maskValue);\r\n    this._maskService.formElementProperty = [\r\n      'value',\r\n      this._maskService.applyMask(\r\n        this._inputValue,\r\n        this._maskService.maskExpression\r\n      )\r\n    ];\r\n  }\r\n\r\n  @Input()\r\n  public set specialCharacters(value: IConfig['specialCharacters']) {\r\n    if (\r\n      !value ||\r\n      !Array.isArray(value) ||\r\n      (Array.isArray(value) && !value.length)\r\n    ) {\r\n      return;\r\n    }\r\n    this._maskService.maskSpecialCharacters = value;\r\n  }\r\n\r\n  @Input()\r\n  public set patterns(value: IConfig['patterns']) {\r\n    if (!value) {\r\n      return;\r\n    }\r\n    this._maskService.maskAvailablePatterns = value;\r\n  }\r\n\r\n  @Input()\r\n  public set prefix(value: IConfig['prefix']) {\r\n    if (!value) {\r\n      return;\r\n    }\r\n    this._maskService.prefix = value;\r\n  }\r\n\r\n  @Input()\r\n  public set sufix(value: IConfig['sufix']) {\r\n    if (!value) {\r\n      return;\r\n    }\r\n    this._maskService.sufix = value;\r\n  }\r\n\r\n  @Input()\r\n  public set dropSpecialCharacters(value: IConfig['dropSpecialCharacters']) {\r\n    this._maskService.dropSpecialCharacters = value;\r\n  }\r\n\r\n  @Input()\r\n  public set showMaskTyped(value: IConfig['showMaskTyped']) {\r\n    if (!value) {\r\n      return;\r\n    }\r\n    this._maskService.showMaskTyped = value;\r\n  }\r\n\r\n  @Input()\r\n  public set showTemplate(value: IConfig['showTemplate']) {\r\n    this._maskService.showTemplate = value;\r\n  }\r\n\r\n  @Input()\r\n  public set clearIfNotMatch(value: IConfig['clearIfNotMatch']) {\r\n    this._maskService.clearIfNotMatch = value;\r\n  }\r\n\r\n  @HostListener('input', ['$event'])\r\n  public onInput(e: KeyboardEvent): void {\r\n    const el: HTMLInputElement = e.target as HTMLInputElement;\r\n    this._inputValue = el.value;\r\n    if (!this._maskValue) {\r\n      this.onChange(el.value);\r\n      return;\r\n    }\r\n    const position: number = (el.selectionStart as number) === 1\r\n      ? (el.selectionStart as number) + this._maskService.prefix.length\r\n      : el.selectionStart as number;\r\n    let caretShift: number = 0;\r\n    this._maskService.applyValueChanges(\r\n      position,\r\n      (shift: number) => (caretShift = shift)\r\n    );\r\n    // only set the selection if the element is active\r\n    if (this.document.activeElement !== el) {\r\n      return;\r\n    }\r\n    el.selectionStart = el.selectionEnd =\r\n      this._position !== null\r\n        ? this._position\r\n        : position +\r\n        // tslint:disable-next-line\r\n        ((e as any).inputType === 'deleteContentBackward' ? 0 : caretShift);\r\n    this._position = null;\r\n  }\r\n\r\n  @HostListener('blur')\r\n  public onBlur(): void {\r\n    this._maskService.clearIfNotMatchFn();\r\n    this.onTouch();\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  public onFocus(e: MouseEvent | KeyboardEvent): void {\r\n    const el: HTMLInputElement = e.target as HTMLInputElement;\r\n    if (\r\n      el !== null && el.selectionStart !== null &&\r\n      el.selectionStart === el.selectionEnd &&\r\n      el.selectionStart > this._maskService.prefix.length &&\r\n      // tslint:disable-next-line\r\n      (e as any).keyCode !== 38\r\n    ) {\r\n      return;\r\n    }\r\n    if (this._maskService.showMaskTyped) {\r\n      this._maskService.maskIsShown = this._maskService.maskExpression.replace(/[0-9]/g, '_');\r\n    }\r\n    el.value = !el.value || el.value === this._maskService.prefix\r\n      ? this._maskService.prefix + this._maskService.maskIsShown\r\n      : el.value;\r\n    /** fix of cursor position with prefix when mouse click occur */\r\n    if (((el.selectionStart as number) || (el.selectionEnd as number)) <= this._maskService.prefix.length) {\r\n      el.selectionStart = this._maskService.prefix.length;\r\n      return;\r\n    }\r\n  }\r\n\r\n  @HostListener('keydown', ['$event'])\r\n  public a(e: KeyboardEvent): void {\r\n    const el: HTMLInputElement = e.target as HTMLInputElement;\r\n    if (e.keyCode === 38) {\r\n      e.preventDefault();\r\n    }\r\n    if (e.keyCode === 37 || e.keyCode === 8) {\r\n      if ((el.selectionStart as number) <= this._maskService.prefix.length\r\n        && (el.selectionEnd as number) <= this._maskService.prefix.length) {\r\n        e.preventDefault();\r\n      }\r\n      this.onFocus(e);\r\n      if (e.keyCode === 8\r\n        && el.selectionStart === 0\r\n        && el.selectionEnd === el.value.length) {\r\n        el.value = this._maskService.prefix;\r\n        this._position = this._maskService.prefix ? this._maskService.prefix.length : 1;\r\n        this.onInput(e);\r\n      }\r\n    }\r\n  }\r\n\r\n  @HostListener('paste')\r\n  public onPaste(): void {\r\n    this._position = Number.MAX_SAFE_INTEGER;\r\n  }\r\n\r\n  /** It writes the value in the input */\r\n  public async writeValue(inputValue: string): Promise<void> {\r\n    if (inputValue === undefined) {\r\n      inputValue = '';\r\n    }\r\n    if (typeof inputValue === 'number') {\r\n      inputValue = String(inputValue);\r\n      this._maskService.isNumberValue = true;\r\n    }\r\n    inputValue && this._maskService.maskExpression ||\r\n      this._maskService.maskExpression && (this._maskService.prefix || this._maskService.showMaskTyped)\r\n      ? (this._maskService.formElementProperty = [\r\n        'value',\r\n        this._maskService.applyMask(\r\n          inputValue,\r\n          this._maskService.maskExpression\r\n        )\r\n      ])\r\n      : (this._maskService.formElementProperty = ['value', inputValue]);\r\n    this._inputValue = inputValue;\r\n  }\r\n\r\n  // tslint:disable-next-line\r\n  public registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n    this._maskService.onChange = this.onChange;\r\n  }\r\n\r\n  // tslint:disable-next-line\r\n  public registerOnTouched(fn: any): void {\r\n    this.onTouch = fn;\r\n  }\r\n\r\n  /** It disables the input element */\r\n  public setDisabledState(isDisabled: boolean): void {\r\n    this._maskService.formElementProperty = ['disabled', isDisabled];\r\n  }\r\n  private _repeatPatternSymbols(maskExp: string): string {\r\n    return maskExp.match(/{[0-9]+}/)\r\n      && maskExp.split('')\r\n        .reduce((accum: string, currval: string, index: number): string => {\r\n          this._start = (currval === '{') ? index : this._start;\r\n\r\n          if (currval !== '}') {\r\n            return this._maskService._findSpecialChar(currval) ? accum + currval : accum;\r\n          }\r\n          this._end = index;\r\n          const repeatNumber: number = Number(maskExp\r\n            .slice(this._start + 1, this._end));\r\n          const repaceWith: string = new Array(repeatNumber + 1)\r\n            .join(maskExp[this._start - 1]);\r\n          return accum + repaceWith;\r\n        }, '') || maskExp;\r\n  }\r\n\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { MaskApplierService } from './mask-applier.service';\r\nimport { IConfig } from './config';\r\n\r\n@Pipe({\r\n  name: 'mask',\r\n  pure: true\r\n})\r\nexport class MaskPipe implements PipeTransform {\r\n\r\n  public constructor(private _maskService: MaskApplierService) { }\r\n\r\n  public transform(value: string|number, mask: string | [string, IConfig['patterns']]): string {\r\n    if (!value) {\r\n      return '';\r\n    }\r\n    if (typeof mask === 'string') {\r\n      return this._maskService.applyMask(`${value}`, mask);\r\n    }\r\n    return this._maskService.applyMaskWithPattern(`${value}`, mask);\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\n\r\nimport { config, INITIAL_CONFIG, initialConfig, NEW_CONFIG, optionsConfig } from './config';\r\nimport { MaskApplierService } from './mask-applier.service';\r\nimport { MaskDirective } from './mask.directive';\r\nimport { MaskPipe } from './mask.pipe';\r\n\r\n@NgModule({\r\n  providers: [MaskApplierService],\r\n  exports: [MaskDirective, MaskPipe],\r\n  declarations: [MaskDirective, MaskPipe]\r\n})\r\nexport class NgxMaskModule {\r\n\r\n  public static forRoot(configValue?: optionsConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: NgxMaskModule,\r\n      providers: [\r\n        {\r\n          provide: NEW_CONFIG,\r\n          useValue: configValue\r\n        },\r\n        {\r\n          provide: INITIAL_CONFIG,\r\n          useValue: initialConfig\r\n        },\r\n        {\r\n          provide: config,\r\n          useFactory: _configFactory,\r\n          deps: [INITIAL_CONFIG, NEW_CONFIG]\r\n        },\r\n      ]\r\n    };\r\n  }\r\n  public static forChild(configValue?: optionsConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: NgxMaskModule,\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function _configFactory\r\n(initConfig: optionsConfig, configValue: optionsConfig | (() => optionsConfig)): Function | optionsConfig {\r\n  return (typeof configValue === 'function') ? configValue() : { ...initConfig, ...configValue };\r\n}\r\n"]}